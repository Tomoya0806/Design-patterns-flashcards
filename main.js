import { Card, CardContent } from "@/components/ui/card";
import { useState } from "react";

/**
 * 3‑page flashcards:
  *  0 = パターン名 (英語 + 日本語)
   *  1 = 用途 + 現実世界アナロジー（日本語）
    *  2 = Java 実装例（最小限）
     *  タップ毎にページを順繰りに切り替える。
      */

      const patterns = [
        {
            en: "Singleton",
                jp: "シングルトン",
                    purpose: "クラスのインスタンスを 1 つに制限し、グローバルなアクセス手段を提供する。",
                        analogy: "大統領は 1 人しか存在しない。",
                            example: `public class Singleton {\n    private static final Singleton INSTANCE = new Singleton();\n    private Singleton() {}\n    public static Singleton getInstance() {\n        return INSTANCE;\n    }\n}`
                              },
                                {
                                    en: "Prototype",
                                        jp: "プロトタイプ",
                                            purpose: "既存オブジェクトを複製して新しいインスタンスを生成する。",
                                                analogy: "コピー機で書類を複写する。",
                                                    example: `class Sheep implements Cloneable {\n    private String name;\n    Sheep(String n) { this.name = n; }\n    @Override public Sheep clone() throws CloneNotSupportedException {\n        return (Sheep) super.clone();\n    }\n}`
                                                      },
                                                        {
                                                            en: "Factory Method",
                                                                jp: "ファクトリーメソッド",
                                                                    purpose: "生成処理をサブクラスに委譲して、依存を弱める。",
                                                                        analogy: "工場の製造ラインが具体的製品を作る。",
                                                                            example: `abstract class Dialog {\n    public void renderWindow() {\n        Button ok = createButton();\n        ok.render();\n    }\n    protected abstract Button createButton();\n}\nclass WindowsDialog extends Dialog {\n    protected Button createButton() { return new WindowsButton(); }\n}`
                                                                              },
                                                                                {
                                                                                    en: "Abstract Factory",
                                                                                        jp: "抽象ファクトリー",
                                                                                            purpose: "関連オブジェクト群をまとめて生成し、具体的クラスを隠蔽する。",
                                                                                                analogy: "家具店でテーブルと椅子をセット購入する。",
                                                                                                    example: `interface GuiFactory { Button createButton(); Checkbox createCheckbox(); }\nclass MacFactory implements GuiFactory {\n    public Button createButton() { return new MacButton(); }\n    public Checkbox createCheckbox() { return new MacCheckbox(); }\n}`
                                                                                                      },
                                                                                                        {
                                                                                                            en: "Builder",
                                                                                                                jp: "ビルダー",
                                                                                                                    purpose: "複雑なオブジェクトを段階的に組み立てる。",
                                                                                                                        analogy: "コース料理を順番に提供する。",
                                                                                                                            example: `class Meal { /* ... */ }\nclass MealBuilder {\n    private Meal meal = new Meal();\n    MealBuilder addSoup() { /*...*/ return this; }\n    MealBuilder addSteak() { /*...*/ return this; }\n    Meal build() { return meal; }\n}`
                                                                                                                              },
                                                                                                                                {
                                                                                                                                    en: "Adapter",
                                                                                                                                        jp: "アダプター",
                                                                                                                                            purpose: "互換性のないインターフェースを変換して接続する。",
                                                                                                                                                analogy: "電源プラグ変換アダプタ。",
                                                                                                                                                    example: `class EuroPlug { void connectEU(); }\nclass JpSocket { void connectJP(); }\nclass PlugAdapter extends EuroPlug {\n    private JpSocket socket;\n    PlugAdapter(JpSocket s){ this.socket = s; }\n    void connectEU(){ socket.connectJP(); }\n}`
                                                                                                                                                      },
                                                                                                                                                        {
                                                                                                                                                            en: "Bridge",
                                                                                                                                                                jp: "ブリッジ",
                                                                                                                                                                    purpose: "抽象と実装を分離し、それぞれ独立に拡張可能にする。",
                                                                                                                                                                        analogy: "リモコンが複数機器を操作。",
                                                                                                                                                                            example: `interface Device { void on(); void off(); }\nclass TV implements Device { /* ... */ }\nabstract class Remote { protected Device d; Remote(Device d){this.d=d;} abstract void togglePower(); }\nclass BasicRemote extends Remote { void togglePower(){ /* ... */ } }`
                                                                                                                                                                              },
                                                                                                                                                                                {
                                                                                                                                                                                    en: "Composite",
                                                                                                                                                                                        jp: "コンポジット",
                                                                                                                                                                                            purpose: "木構造で個々と集合を同一視して操作する。",
                                                                                                                                                                                                analogy: "フォルダとファイルの階層。",
                                                                                                                                                                                                    example: `interface Graphic { void draw(); }\nclass Dot implements Graphic { /* ... */ }\nclass CompositeGraphic implements Graphic { List<Graphic> children; void draw(){ for(Graphic g: children) g.draw(); } }`
                                                                                                                                                                                                      },
                                                                                                                                                                                                        {
                                                                                                                                                                                                            en: "Decorator",
                                                                                                                                                                                                                jp: "デコレーター",
                                                                                                                                                                                                                    purpose: "動的に機能追加して挙動を拡張する。",
                                                                                                                                                                                                                        analogy: "ピザにトッピングを重ねる。",
                                                                                                                                                                                                                            example: `interface Coffee { int cost(); }\nclass BasicCoffee implements Coffee { public int cost(){ return 200; } }\nclass MilkDecorator implements Coffee { Coffee base; MilkDecorator(Coffee c){base=c;} public int cost(){ return base.cost()+50; } }`
                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                    en: "Facade",
                                                                                                                                                                                                                                        jp: "ファサード",
                                                                                                                                                                                                                                            purpose: "複雑なサブシステムに簡易窓口を提供する。",
                                                                                                                                                                                                                                                analogy: "コンビニ店員が各種手続きを一括。",
                                                                                                                                                                                                                                                    example: `class HomeTheaterFacade { DVD dvd; Projector pj; void watchMovie(){ pj.on(); dvd.play(); } }`
                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                            en: "Flyweight",
                                                                                                                                                                                                                                                                jp: "フライウェイト",
                                                                                                                                                                                                                                                                    purpose: "共有インスタンスでメモリを節約する。",
                                                                                                                                                                                                                                                                        analogy: "フォントの字形を再利用。",
                                                                                                                                                                                                                                                                            example: `class Glyph { char c; }\nclass GlyphFactory { Map<Character,Glyph> pool = new HashMap<>(); Glyph get(char c){ return pool.computeIfAbsent(c, k-> new Glyph(k)); } }`
                                                                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                    en: "Proxy",
                                                                                                                                                                                                                                                                                        jp: "プロキシ",
                                                                                                                                                                                                                                                                                            purpose: "アクセス制御や遅延生成のための代理を置く。",
                                                                                                                                                                                                                                                                                                analogy: "弁護士が依頼人の代理で交渉。",
                                                                                                                                                                                                                                                                                                    example: `interface Image { void display(); }\nclass RealImage implements Image { /* file load */ }\nclass LazyImage implements Image { RealImage real; void display(){ if(real==null) real = new RealImage(); real.display(); } }`
                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                            en: "Chain of Responsibility",
                                                                                                                                                                                                                                                                                                                jp: "責任連鎖",
                                                                                                                                                                                                                                                                                                                    purpose: "要求を連続する処理者に渡し、処理者が責任を取るまで進む。",
                                                                                                                                                                                                                                                                                                                        analogy: "社内稟議の承認フロー。",
                                                                                                                                                                                                                                                                                                                            example: `abstract class Handler { Handler next; void setNext(Handler n){next=n;} void handle(int lvl){ if(can(lvl)) process(); else if(next!=null) next.handle(lvl); } abstract boolean can(int); abstract void process(); }`
                                                                                                                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                    en: "Command",
                                                                                                                                                                                                                                                                                                                                        jp: "コマンド",
                                                                                                                                                                                                                                                                                                                                            purpose: "操作要求をオブジェクトとしてカプセル化する。",
                                                                                                                                                                                                                                                                                                                                                analogy: "レストランのオーダー票。",
                                                                                                                                                                                                                                                                                                                                                    example: `interface Command { void execute(); }\nclass LightOn implements Command { Light l; public void execute(){ l.on(); } }\nclass Invoker { Queue<Command> q; void run(){ q.poll().execute(); } }`
                                                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                            en: "Interpreter",
                                                                                                                                                                                                                                                                                                                                                                jp: "インタープリター",
                                                                                                                                                                                                                                                                                                                                                                    purpose: "文法規則をクラスで表し、式を解釈する。",
                                                                                                                                                                                                                                                                                                                                                                        analogy: "外国語の通訳。",
                                                                                                                                                                                                                                                                                                                                                                            example: `interface Expr { int eval(); }\nclass Num implements Expr { int v; int eval(){ return v; } }\nclass Add implements Expr { Expr l,r; int eval(){ return l.eval()+r.eval(); } }`
                                                                                                                                                                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                    en: "Iterator",
                                                                                                                                                                                                                                                                                                                                                                                        jp: "イテレーター",
                                                                                                                                                                                                                                                                                                                                                                                            purpose: "集合の要素を順にアクセスする方法を提供。",
                                                                                                                                                                                                                                                                                                                                                                                                analogy: "テレビのチャンネルを順に回す。",
                                                                                                                                                                                                                                                                                                                                                                                                    example: `Iterator<String> it = list.iterator(); while(it.hasNext()) System.out.println(it.next());`
                                                                                                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                            en: "Mediator",
                                                                                                                                                                                                                                                                                                                                                                                                                jp: "メディエーター",
                                                                                                                                                                                                                                                                                                                                                                                                                    purpose: "オブジェクト間通信を仲介役に集中させる。",
                                                                                                                                                                                                                                                                                                                                                                                                                        analogy: "航空管制塔が飛行機を調整。",
                                                                                                                                                                                                                                                                                                                                                                                                                            example: `class ChatRoom { void showMsg(User u,String msg){ /* broadcast */ } }\nclass User { ChatRoom room; void send(String msg){ room.showMsg(this,msg); } }`
                                                                                                                                                                                                                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                    en: "Memento",
                                                                                                                                                                                                                                                                                                                                                                                                                                        jp: "メメント",
                                                                                                                                                                                                                                                                                                                                                                                                                                            purpose: "オブジェクト状態を外部に保存し、後で復元する。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                analogy: "ゲームのセーブデータ。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                    example: `class Snapshot { int hp; Snapshot(int hp){this.hp=hp;} }\nclass Player { int hp; Snapshot save(){ return new Snapshot(hp);} void restore(Snapshot s){ hp=s.hp; } }`
                                                                                                                                                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            en: "Observer",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                jp: "オブザーバー",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    purpose: "状態変化をリスナーに通知し同期する。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        analogy: "SNSフォロワーへの更新通知。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            example: `class Subject { List<Observer> obs = new ArrayList<>(); void notifyAllObs(){ for(Observer o:obs) o.update(); } }`
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    en: "State",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        jp: "ステート",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            purpose: "状態によって振る舞いを切り替える。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                analogy: "自販機が投入金額でふるまい変化。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    example: `interface VendingState { void insertCoin(); }\nclass NoCoin implements VendingState { /* ... */ }\nclass HasCoin implements VendingState { /* ... */ }`
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            en: "Strategy",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                jp: "ストラテジー",
purpose: "アルゴリズムを切り替え可能にする。",
analogy: "ナビが最短/最速ルート切替。",
example: `interface RouteStrategy { List<Point> buildRoute(); }\nclass Fastest implements RouteStrategy { /* ... */ }\nclass Navigator { RouteStrategy strat; void setStrategy(RouteStrategy s){ strat=s; } }`
},
{
en: "Template Method",
jp: "テンプレートメソッド",
purpose: "処理骨組みを親で定義し、一部を子クラス任せにする。",
analogy: "レシピの手順書。",
example: `abstract class Game { final void play(){ init(); startPlay(); endPlay(); } abstract void startPlay(); void init(){} void endPlay(){} }`
},
{
en: "Visitor",
jp: "ビジター",
purpose: "データ構造と処理を分離し、新しい処理を追加しやすくする。",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        analogy: "監査人が各部署を訪問して調査。",
example: `interface Visitor { void visit(Book b); void visit(CD c); }\ninterface Item { void accept(Visitor v); }\nclass PriceVisitor implements Visitor { /* ... */ }`
}


export default function DesignPatternsFlashcards() {
return (
div className="min-h-screen flex flex-col items-center bg-gray-100 p-8 gap-8">
h1 className="text-3xl font-bold">GoF デザインパターン暗記カード</h1>
p className="text-gray-600 text-center max-w-xl">
カードをタップすると「名称→説明→実装例」の順に切り替わります。
p>
div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 w-full max-w-6xl">
{patterns.map((p, i) => (
lashcard key={i} pattern={p} />
}
div>
div>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          );
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }

function Flashcard({ pattern }) {
const [page, setPage] = useState(0); // 0=name,1=explain,2=code

const handleClick = () => setPage((page + 1) % 3);

return (
ard
onClick={handleClick}
className="w-full h-72 rounded-2xl shadow-xl cursor-pointer flex items-center justify-center transition-transform duration-300 hover:scale-105 bg-white"

ardContent className="w-full h-full flex flex-col items-center justify-center p-4 text-center overflow-auto">
{page === 0 && (

span className="text-sm text-indigo-600 font-medium">{pattern.jp}</span>
span className="text-xl font-semibold">{pattern.en}</span>

}
{page === 1 && (
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <>
span className="text-base font-medium leading-normal mb-2">{pattern.purpose}</span>
span className="text-sm text-gray-700">{pattern.analogy}</span>

}
{page === 2 && (
pre className="text-left text-xs whitespace-pre-wrap"><code>{pattern.example}</code></pre>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            )}
ardContent>
ard>

}
